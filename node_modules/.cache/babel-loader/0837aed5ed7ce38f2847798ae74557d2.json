{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\DEV\\\\cosmosapiens\\\\src\\\\components\\\\wormhole\\\\wormhole.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport WormholeMap from '../../assets/textures/wormhole.jpg';\nimport CloudsMap from '../../assets/textures/cloud.png';\nimport { TextureLoader } from \"three\";\nimport { useLoader, useFrame } from \"@react-three/fiber\";\nimport { Stars, useGLTF } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Model({\n  url,\n  ...props\n}) {\n  _s();\n\n  const gltf = useGLTF(url);\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: gltf.scene,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n} // const Model = () => {\n//     const gltf = useGLTF('/scene.gltf')\n//     const spaceshipRef = useRef();\n//     return <primitive ref={spaceshipRef} object={gltf.scene} dispose={null} position={[0, -2, 0]} scale={0.1} rotation={[0,0,-1.55]} />;\n//   };\n\n\n_s(Model, \"JPNsyO2HJUP2vpcCb1URfH7+8ZU=\", false, function () {\n  return [useGLTF];\n});\n\n_c = Model;\nexport function Wormhole(props) {\n  _s2();\n\n  const [wormholeMap, cloudMap] = useLoader(TextureLoader, [WormholeMap, CloudsMap]);\n  const wormholeRef = useRef();\n  const cloudsRef = useRef();\n  const starRef = useRef();\n  const spaceshipRef = useRef();\n  const spiritRef = useRef();\n  const sateliteRef = useRef();\n  useFrame(({\n    clock\n  }) => {\n    const elapsedTime = clock.getElapsedTime();\n    wormholeRef.current.rotation.y = elapsedTime / 2;\n    wormholeRef.current.rotation.z = elapsedTime / 10;\n    cloudsRef.current.rotation.y = elapsedTime / -2;\n    starRef.current.rotation.x = elapsedTime / -20;\n    spiritRef.current.rotation.y = elapsedTime / -2;\n    spiritRef.current.rotation.x = elapsedTime / -2;\n    sateliteRef.current.rotation.y = elapsedTime / -2;\n    spaceshipRef.current.rotation.y = elapsedTime / -5; //50 + Math.sin(elapsedTime) * 30\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      color: \"#f6f3ea\",\n      position: [10, 0, 10],\n      intensity: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Stars, {\n      ref: starRef,\n      radius: 300,\n      depth: 60,\n      count: 20000,\n      factor: 7,\n      saturation: 0,\n      fade: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: cloudsRef,\n      position: [0, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [2.25, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n        map: cloudMap,\n        opacity: 1,\n        depthWrite: true,\n        transparent: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: wormholeRef,\n      position: [0, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [1.8, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        map: wormholeMap,\n        metalness: 0.98,\n        roughnes: 0.25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n      ref: spaceshipRef,\n      children: /*#__PURE__*/_jsxDEV(Model, {\n        \"rotation-z\": 0,\n        \"position-y\": -4,\n        scale: 0.00075,\n        url: \"/starship.gltf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n      ref: spiritRef,\n      children: /*#__PURE__*/_jsxDEV(Model, {\n        \"rotation-z\": 0,\n        position: [5, 0, 0],\n        scale: 0.5,\n        url: \"/dog.gltf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n      ref: sateliteRef,\n      children: /*#__PURE__*/_jsxDEV(Model, {\n        \"rotation-z\": -0.1,\n        position: [0, 3, 0],\n        scale: 0.0001,\n        url: \"/scene.gltf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Wormhole, \"ogYajDMWBOrDxy3yvny/cKCKhRE=\", false, function () {\n  return [useLoader, useFrame];\n});\n\n_c2 = Wormhole;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Model\");\n$RefreshReg$(_c2, \"Wormhole\");","map":{"version":3,"sources":["C:/Users/win10/DEV/cosmosapiens/src/components/wormhole/wormhole.js"],"names":["React","useRef","WormholeMap","CloudsMap","TextureLoader","useLoader","useFrame","Stars","useGLTF","Model","url","props","gltf","scene","Wormhole","wormholeMap","cloudMap","wormholeRef","cloudsRef","starRef","spaceshipRef","spiritRef","sateliteRef","clock","elapsedTime","getElapsedTime","current","rotation","y","z","x"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,oBAApC;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,mBAA/B;;;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,GAAF;AAAO,KAAGC;AAAV,CAAf,EAAkC;AAAA;;AAC9B,QAAMC,IAAI,GAAGJ,OAAO,CAACE,GAAD,CAApB;AACA,sBAAO;AAAW,IAAA,MAAM,EAAEE,IAAI,CAACC,KAAxB;AAAA,OAAmCF;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAEH;AACA;AACA;AACA;AACA;;;GATSF,K;UACQD,O;;;KADRC,K;AAYT,OAAO,SAASK,QAAT,CAAkBH,KAAlB,EAAwB;AAAA;;AAE3B,QAAM,CAACI,WAAD,EAAcC,QAAd,IAA0BX,SAAS,CAACD,aAAD,EAAgB,CAACF,WAAD,EAAcC,SAAd,CAAhB,CAAzC;AAEA,QAAMc,WAAW,GAAGhB,MAAM,EAA1B;AACA,QAAMiB,SAAS,GAAGjB,MAAM,EAAxB;AACA,QAAMkB,OAAO,GAAGlB,MAAM,EAAtB;AACA,QAAMmB,YAAY,GAAGnB,MAAM,EAA3B;AACA,QAAMoB,SAAS,GAAGpB,MAAM,EAAxB;AACA,QAAMqB,WAAW,GAAGrB,MAAM,EAA1B;AAEAK,EAAAA,QAAQ,CAAC,CAAC;AAAEiB,IAAAA;AAAF,GAAD,KAAe;AACpB,UAAMC,WAAW,GAAGD,KAAK,CAACE,cAAN,EAApB;AAEAR,IAAAA,WAAW,CAACS,OAAZ,CAAoBC,QAApB,CAA6BC,CAA7B,GAAiCJ,WAAW,GAAG,CAA/C;AACAP,IAAAA,WAAW,CAACS,OAAZ,CAAoBC,QAApB,CAA6BE,CAA7B,GAAiCL,WAAW,GAAG,EAA/C;AACAN,IAAAA,SAAS,CAACQ,OAAV,CAAkBC,QAAlB,CAA2BC,CAA3B,GAA+BJ,WAAW,GAAG,CAAC,CAA9C;AACAL,IAAAA,OAAO,CAACO,OAAR,CAAgBC,QAAhB,CAAyBG,CAAzB,GAA6BN,WAAW,GAAG,CAAC,EAA5C;AACAH,IAAAA,SAAS,CAACK,OAAV,CAAkBC,QAAlB,CAA2BC,CAA3B,GAA+BJ,WAAW,GAAG,CAAC,CAA9C;AACAH,IAAAA,SAAS,CAACK,OAAV,CAAkBC,QAAlB,CAA2BG,CAA3B,GAA+BN,WAAW,GAAG,CAAC,CAA9C;AACAF,IAAAA,WAAW,CAACI,OAAZ,CAAoBC,QAApB,CAA6BC,CAA7B,GAAiCJ,WAAW,GAAG,CAAC,CAAhD;AACAJ,IAAAA,YAAY,CAACM,OAAb,CAAqBC,QAArB,CAA8BC,CAA9B,GAAmCJ,WAAW,GAAG,CAAC,CAAlD,CAVoB,CAUiC;AACtD,GAXK,CAAR;AAaA,sBACA;AAAA,4BACI;AAAc,MAAA,SAAS,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CAAtC;AAAmD,MAAA,SAAS,EAAE;AAA9D;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEL,OAAZ;AAAqB,MAAA,MAAM,EAAE,GAA7B;AAAkC,MAAA,KAAK,EAAE,EAAzC;AAA6C,MAAA,KAAK,EAAE,KAApD;AAA2D,MAAA,MAAM,EAAE,CAAnE;AAAsE,MAAA,UAAU,EAAE,CAAlF;AAAqF,MAAA,IAAI,EAAE;AAA3F;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAM,MAAA,GAAG,EAAED,SAAX;AAAsB,MAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAhC;AAAA,8BACI;AAAgB,QAAA,IAAI,EAAE,CAAC,IAAD,EAAO,EAAP,EAAW,EAAX;AAAtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACA,QAAA,GAAG,EAAEF,QADL;AAEA,QAAA,OAAO,EAAE,CAFT;AAGA,QAAA,UAAU,EAAE,IAHZ;AAIA,QAAA,WAAW,EAAE;AAJb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAaI;AAAM,MAAA,GAAG,EAAEC,WAAX;AAAwB,MAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAlC;AAAA,8BACI;AAAgB,QAAA,IAAI,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV;AAAtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAsB,QAAA,GAAG,EAAEF,WAA3B;AAAwC,QAAA,SAAS,EAAE,IAAnD;AAAyD,QAAA,QAAQ,EAAE;AAAnE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAiBI;AAAO,MAAA,GAAG,EAAEK,YAAZ;AAAA,6BACI,QAAC,KAAD;AAAQ,sBAAY,CAApB;AAAuB,sBAAY,CAAC,CAApC;AAAuC,QAAA,KAAK,EAAE,OAA9C;AAAuD,QAAA,GAAG,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAoBI;AAAO,MAAA,GAAG,EAAEC,SAAZ;AAAA,6BACI,QAAC,KAAD;AAAQ,sBAAY,CAApB;AAAuB,QAAA,QAAQ,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAjC;AAA0C,QAAA,KAAK,EAAE,GAAjD;AAAsD,QAAA,GAAG,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApBJ,eAuBI;AAAO,MAAA,GAAG,EAAEC,WAAZ;AAAA,6BACI,QAAC,KAAD;AAAQ,sBAAY,CAAC,GAArB;AAA0B,QAAA,QAAQ,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAApC;AAA6C,QAAA,KAAK,EAAE,MAApD;AAA4D,QAAA,GAAG,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA,kBADA;AA6BH;;IArDeR,Q;UAEoBT,S,EAShCC,Q;;;MAXYQ,Q","sourcesContent":["import React, { useRef } from \"react\";\r\nimport WormholeMap from '../../assets/textures/wormhole.jpg';\r\nimport CloudsMap from '../../assets/textures/cloud.png';\r\nimport { TextureLoader } from \"three\";\r\nimport { useLoader, useFrame } from \"@react-three/fiber\";\r\nimport { Stars, useGLTF } from '@react-three/drei';\r\n\r\nfunction Model({ url, ...props }) {\r\n    const gltf = useGLTF(url)\r\n    return <primitive object={gltf.scene} {...props} />\r\n  }\r\n\r\n// const Model = () => {\r\n//     const gltf = useGLTF('/scene.gltf')\r\n//     const spaceshipRef = useRef();\r\n//     return <primitive ref={spaceshipRef} object={gltf.scene} dispose={null} position={[0, -2, 0]} scale={0.1} rotation={[0,0,-1.55]} />;\r\n//   };\r\n  \r\n\r\nexport function Wormhole(props){\r\n\r\n    const [wormholeMap, cloudMap] = useLoader(TextureLoader, [WormholeMap, CloudsMap]);\r\n    \r\n    const wormholeRef = useRef();\r\n    const cloudsRef = useRef();\r\n    const starRef = useRef();\r\n    const spaceshipRef = useRef();\r\n    const spiritRef = useRef();\r\n    const sateliteRef = useRef();\r\n\r\n    useFrame(({ clock }) => {\r\n        const elapsedTime = clock.getElapsedTime();\r\n    \r\n        wormholeRef.current.rotation.y = elapsedTime / 2;\r\n        wormholeRef.current.rotation.z = elapsedTime / 10;\r\n        cloudsRef.current.rotation.y = elapsedTime / -2;\r\n        starRef.current.rotation.x = elapsedTime / -20;\r\n        spiritRef.current.rotation.y = elapsedTime / -2;\r\n        spiritRef.current.rotation.x = elapsedTime / -2;\r\n        sateliteRef.current.rotation.y = elapsedTime / -2;\r\n        spaceshipRef.current.rotation.y =  elapsedTime / -5; //50 + Math.sin(elapsedTime) * 30\r\n      });\r\n\r\n    return (\r\n    <>\r\n        <ambientLight intensity={0.3} />\r\n        <pointLight color=\"#f6f3ea\" position={[10, 0, 10]} intensity={5} />\r\n        <Stars ref={starRef} radius={300} depth={60} count={20000} factor={7} saturation={0} fade={true} />\r\n        <mesh ref={cloudsRef} position={[0, 0, 0]} >\r\n            <sphereGeometry args={[2.25, 32, 32]} />\r\n            <meshPhongMaterial\r\n            map={cloudMap}\r\n            opacity={1}\r\n            depthWrite={true}\r\n            transparent={true}\r\n            />\r\n        </mesh>\r\n        <mesh ref={wormholeRef} position={[0, 0, 0]}>\r\n            <sphereGeometry args={[1.8, 32, 32]} />\r\n            <meshStandardMaterial map={wormholeMap} metalness={0.98} roughnes={0.25} />\r\n        </mesh>\r\n        <group ref={spaceshipRef}>\r\n            <Model  rotation-z={0} position-y={-4} scale={0.00075} url='/starship.gltf' /> \r\n        </group>\r\n        <group ref={spiritRef}>\r\n            <Model  rotation-z={0} position={[5,0,0]} scale={0.5} url='/dog.gltf' /> \r\n        </group>\r\n        <group ref={sateliteRef}>\r\n            <Model  rotation-z={-0.1} position={[0,3,0]} scale={0.0001} url='/scene.gltf' /> \r\n        </group>\r\n    </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}