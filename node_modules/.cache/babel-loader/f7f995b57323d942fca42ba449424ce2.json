{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\win10\\\\CODE\\\\cosmos\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useMemo,useRef,useCallback}from\"react\";import WormholeMap from'../../assets/textures/wormhole.jpg';import CloudsMap from'../../assets/textures/cloud.png';import{TextureLoader}from\"three\";import{useLoader,useFrame}from\"@react-three/fiber\";import{OrbitControls,Stars}from'@react-three/drei';import*as THREE from\"three\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var parameters={};parameters.count=8000;parameters.size=0.0025;parameters.radius=600;parameters.branches=3;parameters.spin=0.3;parameters.randomness=0.5;parameters.randomnessPower=5;parameters.stars=4000;parameters.starColor='#1b3984';parameters.insideColor='#ff6030';parameters.outsideColor='#1b3984';export function Galaxy(props){var _useMemo=useMemo(function(){var positions=[],colors=[];for(var i=0;i<parameters.count;i++){//Position\nvar x=Math.random()*parameters.radius;var branchAngle=i%parameters.branches/parameters.branches*2*Math.PI;var spinAngle=x*parameters.spin;var randomX=Math.pow(Math.random(),parameters.randomnessPower)*(Math.random()<0.5?1:-1);var randomY=Math.pow(Math.random(),parameters.randomnessPower)*(Math.random()<0.5?1:-1);var randomZ=Math.pow(Math.random(),parameters.randomnessPower)*(Math.random()<0.5?1:-1);positions[i*3]=Math.sin(branchAngle+spinAngle)*x+randomX;positions[i*3+1]=randomY;positions[i*3+2]=Math.cos(branchAngle+spinAngle)*x+randomZ;//Color\n//Color\nvar colorInside=new THREE.Color(parameters.insideColor);var colorOutside=new THREE.Color(parameters.outsideColor);var mixedColor=colorInside.clone();mixedColor.lerp(colorOutside,x/parameters.radius);colors[i*3+0]=mixedColor.r;colors[i*3+1]=mixedColor.g;colors[i*3+2]=mixedColor.b;}return[new Float32Array(positions),new Float32Array(colors)];},[parameters.count]),_useMemo2=_slicedToArray(_useMemo,2),positions=_useMemo2[0],colors=_useMemo2[1];var attrib=useRef();var galaxyRef=useRef();useFrame(function(_ref){var clock=_ref.clock;var elapsedTime=clock.getElapsedTime();galaxyRef.current.rotation.y=elapsedTime/-1;});return/*#__PURE__*/_jsxs(\"points\",{ref:galaxyRef,children:[/*#__PURE__*/_jsxs(\"bufferGeometry\",{attach:\"geometry\",children:[/*#__PURE__*/_jsx(\"bufferAttribute\",{attachObject:[\"attributes\",\"position\"],count:positions.length/3,array:positions,itemSize:3}),/*#__PURE__*/_jsx(\"bufferAttribute\",{ref:attrib,attachObject:[\"attributes\",\"color\"],count:colors.length/3,array:colors,itemSize:3})]}),/*#__PURE__*/_jsx(\"pointsMaterial\",{attach:\"material\",vertexColors:true,size:parameters.size,sizeAttenuation:true})]});}","map":{"version":3,"sources":["C:/Users/win10/CODE/cosmos/src/components/galaxy/galaxy.js"],"names":["React","useMemo","useRef","useCallback","WormholeMap","CloudsMap","TextureLoader","useLoader","useFrame","OrbitControls","Stars","THREE","parameters","count","size","radius","branches","spin","randomness","randomnessPower","stars","starColor","insideColor","outsideColor","Galaxy","props","positions","colors","i","x","Math","random","branchAngle","PI","spinAngle","randomX","pow","randomY","randomZ","sin","cos","colorInside","Color","colorOutside","mixedColor","clone","lerp","r","g","b","Float32Array","attrib","galaxyRef","clock","elapsedTime","getElapsedTime","current","rotation","y","length"],"mappings":"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","sourcesContent":["import React, { useMemo, useRef, useCallback } from \"react\"\r\nimport WormholeMap from '../../assets/textures/wormhole.jpg';\r\nimport CloudsMap from '../../assets/textures/cloud.png';\r\nimport { TextureLoader } from \"three\";\r\nimport { useLoader, useFrame } from \"@react-three/fiber\";\r\nimport { OrbitControls, Stars } from '@react-three/drei';\r\nimport * as THREE from \"three\";\r\n\r\nconst parameters = {}\r\n\r\nparameters.count = 8000\r\nparameters.size = 0.0025\r\nparameters.radius = 600\r\nparameters.branches = 3\r\nparameters.spin = 0.3\r\nparameters.randomness = 0.5\r\nparameters.randomnessPower = 5\r\nparameters.stars = 4000\r\nparameters.starColor = '#1b3984'\r\nparameters.insideColor = '#ff6030'\r\nparameters.outsideColor = '#1b3984'\r\n\r\nexport function Galaxy(props){\r\n\r\n    const [positions, colors] = useMemo(() => {\r\n        let positions = [],\r\n          colors = []\r\n        for (let i = 0; i < parameters.count; i++) {\r\n            //Position\r\n        const x = Math.random() * parameters.radius\r\n        const branchAngle = (i % parameters.branches) / parameters.branches * 2 * Math.PI\r\n        const spinAngle = x * parameters.spin\r\n\r\n        const randomX = Math.pow(Math.random(), parameters.randomnessPower) * (Math.random()<0.5 ? 1: -1) \r\n        const randomY = Math.pow(Math.random(), parameters.randomnessPower) * (Math.random()<0.5 ? 1: -1) \r\n        const randomZ = Math.pow(Math.random(), parameters.randomnessPower) * (Math.random()<0.5 ? 1: -1)\r\n        positions[i*3] = Math.sin(branchAngle + spinAngle) * x + randomX\r\n        positions[i*3 + 1] = randomY\r\n        positions[i*3 + 2] = Math.cos(branchAngle + spinAngle) * x + randomZ\r\n        \r\n        //Color\r\n\r\n        const colorInside = new THREE.Color(parameters.insideColor)\r\n        const colorOutside = new THREE.Color(parameters.outsideColor)\r\n\r\n\r\n        const mixedColor = colorInside.clone()\r\n        mixedColor.lerp(colorOutside, x / parameters.radius)\r\n\r\n        colors[i*3 + 0] = mixedColor.r\r\n        colors[i*3 + 1] = mixedColor.g\r\n        colors[i*3 + 2] = mixedColor.b\r\n\r\n        }\r\n        return [new Float32Array(positions), new Float32Array(colors)]\r\n      }, [parameters.count])\r\n\r\n      const attrib = useRef()\r\n      const galaxyRef = useRef();\r\n\r\n      useFrame(({ clock }) => {\r\n        const elapsedTime = clock.getElapsedTime();\r\n    \r\n        \r\n        galaxyRef.current.rotation.y = elapsedTime / -1;\r\n      });\r\n\r\n    return (\r\n        <points ref={galaxyRef}>\r\n          <bufferGeometry attach=\"geometry\">\r\n            <bufferAttribute attachObject={[\"attributes\", \"position\"]} count={positions.length / 3} array={positions} itemSize={3} />\r\n            <bufferAttribute ref={attrib} attachObject={[\"attributes\", \"color\"]} count={colors.length / 3} array={colors} itemSize={3} />\r\n          </bufferGeometry>\r\n          <pointsMaterial attach=\"material\" vertexColors size={parameters.size} sizeAttenuation={true} />\r\n        </points>\r\n      );\r\n}"]},"metadata":{},"sourceType":"module"}