{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\DEV\\\\cosmosapiens\\\\src\\\\components\\\\section\\\\section.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useRef, useContext } from \"react\";\nimport { useFrame, useThree } from '@react-three/fiber';\nimport lerp from \"lerp\";\nimport state from \"../state/state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst offsetContext = /*#__PURE__*/createContext(0);\nexport function Section({\n  children,\n  offset,\n  factor,\n  ...props\n}) {\n  _s();\n\n  const {\n    offset: parentOffset,\n    sectionHeight,\n    aspect\n  } = useSection();\n  const ref = useRef();\n  offset = offset !== undefined ? offset : parentOffset;\n  useFrame(() => {\n    const curY = ref.current.position.y;\n    const curTop = state.top.current / aspect;\n    ref.current.position.y = lerp(curY, curTop / state.zoom * factor, 0.1);\n  });\n  return /*#__PURE__*/_jsxDEV(offsetContext.Provider, {\n    value: offset,\n    children: /*#__PURE__*/_jsxDEV(\"group\", { ...props,\n      position: [0, -sectionHeight * offset * factor, 0],\n      children: /*#__PURE__*/_jsxDEV(\"group\", {\n        ref: ref,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Section, \"0kx0hpYY5gweK+i86x3acON93vM=\", false, function () {\n  return [useSection, useFrame];\n});\n\n_c = Section;\nexport function useSection() {\n  _s2();\n\n  const {\n    sections,\n    pages,\n    zoom\n  } = state;\n  const {\n    size,\n    viewport\n  } = useThree();\n  const offset = useContext(offsetContext);\n  const viewportWidth = viewport.width;\n  const viewportHeight = viewport.height;\n  const canvasWidth = viewportWidth / zoom;\n  const canvasHeight = viewportHeight / zoom;\n  const mobile = size.width < 700;\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1);\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6);\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1));\n  const aspect = size.height / viewportHeight;\n  return {\n    aspect,\n    viewport,\n    offset,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    mobile,\n    margin,\n    contentMaxWidth,\n    sectionHeight\n  };\n} // export { Section, useSection };\n\n_s2(useSection, \"2JBFNAK/9cIj4RNfj7ub24s3uIs=\", false, function () {\n  return [useThree];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"sources":["C:/Users/win10/DEV/cosmosapiens/src/components/section/section.js"],"names":["React","createContext","useRef","useContext","useFrame","useThree","lerp","state","offsetContext","Section","children","offset","factor","props","parentOffset","sectionHeight","aspect","useSection","ref","undefined","curY","current","position","y","curTop","top","zoom","sections","pages","size","viewport","viewportWidth","width","viewportHeight","height","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth"],"mappings":"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","sourcesContent":["import React, { createContext, useRef, useContext } from \"react\";\r\nimport { useFrame, useThree } from '@react-three/fiber';\r\nimport lerp from \"lerp\";\r\nimport state from \"../state/state\";\r\n\r\nconst offsetContext = createContext(0);\r\n\r\nexport function Section({ children, offset, factor, ...props }) {\r\n  const { offset: parentOffset, sectionHeight, aspect } = useSection();\r\n  const ref = useRef();\r\n  offset = offset !== undefined ? offset : parentOffset;\r\n  useFrame(() => {\r\n    const curY = ref.current.position.y;\r\n    const curTop = state.top.current / aspect;\r\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1);\r\n  });\r\n  return (\r\n    <offsetContext.Provider value={offset}>\r\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\r\n        <group ref={ref}>{children}</group>\r\n      </group>\r\n    </offsetContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useSection() {\r\n  const { sections, pages, zoom } = state;\r\n  const { size, viewport } = useThree();\r\n  const offset = useContext(offsetContext);\r\n  const viewportWidth = viewport.width;\r\n  const viewportHeight = viewport.height;\r\n  const canvasWidth = viewportWidth / zoom;\r\n  const canvasHeight = viewportHeight / zoom;\r\n  const mobile = size.width < 700;\r\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1);\r\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6);\r\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1));\r\n  const aspect = size.height / viewportHeight;\r\n  return {\r\n    aspect,\r\n    viewport,\r\n    offset,\r\n    viewportWidth,\r\n    viewportHeight,\r\n    canvasWidth,\r\n    canvasHeight,\r\n    mobile,\r\n    margin,\r\n    contentMaxWidth,\r\n    sectionHeight,\r\n  };\r\n}\r\n\r\n// export { Section, useSection };"]},"metadata":{},"sourceType":"module"}